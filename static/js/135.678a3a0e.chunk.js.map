{"version":3,"file":"static/js/135.678a3a0e.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/index.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/index.jsx","components/Filter/Filter.styled.jsx","components/Filter/index.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/index.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding-left: 20px;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n  line-height: 1.5;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 100px;\n  height: 25px;\n  border: 0;\n  border-radius: 2%;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import React from 'react';\nimport { Item, Button } from './ContactItem.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\n\nconst ContactItem = ({ id, name, phone }) => {\n\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Item>\n      {name}: {phone}\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 20px;\n  padding-right: 20px;\n  padding-bottom: 20px;\n  background-color: #9dcff6;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\n","import React from 'react';\nimport ContactItem from '../ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Container } from './ContactList.styled';\n\nconst ContactList = () => {\n  const items = useSelector(selectContacts);\n\n  const filter = useSelector(selectFilter);\n\n  const getFilterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <Container>\n      {getFilterContacts().map(({ name, number, id }) => (\n        <ContactItem key={id} id={id} name={name} phone={number} />\n      ))}\n    </Container>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  padding: 20px;\n  background-color: #9dcff6;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Input = styled.input`\n  width: 160px;\n  margin-top: 10px;\n  height: 25px;\n  font: inherit;\n  border: none;\n  outline: none;\n  border-radius: 2%;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n","import React from 'react';\nimport { Container, Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filtersSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = e => dispatch(setFilter(e.target.value));\n\n  return (\n    <Container>\n      <label>Find contacts by name</label>\n      <Input type=\"text\" value={filter} onChange={changeFilter} />\n    </Container>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 20px;\n  background-color: #9dcff6;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  height: 100%;\n  width: 320px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 25px;\n  font: inherit;\n  border: none;\n  outline: none;\n  border-radius: 2%;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 100px;\n  height: 25px;\n  border: 0;\n  border-radius: 2%;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import { useState } from 'react';\nimport { Form, Button, Input, Container, Label } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport default function ContactForm() {\n\n  const items = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    items.some(contact => contact.name.toLowerCase() === name.toLowerCase())\n      ? alert(`${name} is already in contacts`) || reset()\n      : dispatch(\n          addContact({\n            name: form.elements.name.value,\n            number: form.elements.number.value,\n          })\n        ) && reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name <br />\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n          />\n        </Label>\n        <Label>\n          Number <br />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n          />\n        </Label>\n        <Button type=\"submit\">Sign up</Button>\n      </Form>\n    </Container>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport ContactForm from '../components/ContactForm';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","Item","styled","Button","id","name","phone","dispatch","useDispatch","type","onClick","deleteContact","Container","useSelector","normalizedFilter","toLowerCase","contact","includes","getFilterContacts","map","number","Input","value","onChange","e","setFilter","target","Form","Label","ContactForm","useState","setName","setNumber","handleChange","reset","onSubmit","preventDefault","form","some","alert","addContact","elements","pattern","title","required","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}